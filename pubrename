#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jul  1 18:24:03 2021

@author: florian
"""

import time
import os
import random
import subprocess
import tkinter as tk
import tkinter.font as tkFont
from tkinter import filedialog
import unidecode

path = "."

def set_path():
    
    global path
    
    path=filedialog.askdirectory()+"/"
    
    ent_directory.insert(0, path)
    
    return path

def check_filetype(file):
    """
    Check if file is pdf; returns boolean
    
    2do: Check if file is pdf, djvu, or epub; returns boolean

    """
    accepted_filetypes = [".pdf"]#, ".djvu", ".djv", ".epub"]
    file_name, file_extension = os.path.splitext(file)
    
    if (file_extension in accepted_filetypes):
        return True
    else:
        return False
    
def open_random_file():
    
    os.system("pkill evince")
    
    global file
    
    file=random.choice(os.listdir(path))
    
    ent_file.insert(0, path+file)
    
    while check_filetype(file) == False:
        random.choice(os.listdir(path))
        ent_file.insert(0, path+file)
        
    ent_file.insert(0, path+file)
        
    handle_file(file)
        
    return file

def open_file():
    
    os.system("pkill evince")
    
    global file
    
    file=filedialog.askopenfilename()
    
    while check_filetype(file) == False:
        file=filedialog.askopenfilename()
        
    handle_file(file)
        
    return file

def handle_file(file):
    
    ent_newfilename.delete(0, tk.END)
    ent_oldfilename.delete(0, tk.END)
    
    subprocess.Popen(["evince", file])
    time.sleep(0.75)
    subprocess.Popen(["xdotool", "key", "Super+Right"])
    time.sleep(0.1)
    subprocess.Popen(["xdotool", "key", "F9"])
    time.sleep(0.1)
    subprocess.Popen(["xdotool", "keydown", "Alt", "key", "Tab"])
    time.sleep(0.1)
    subprocess.Popen(["xdotool", "keyup", "Alt"])
    
    old_file_name, file_extension = os.path.splitext(file)
    
    ent_oldfilename.insert(0, old_file_name)

def preview():
    author = ent_author.get()
    author = author + "_"

    year = ent_year.get()
    year = year + "_"
    
    title = ent_title.get()
    
    subtitle = ent_subtitle.get()

    if not subtitle == "":
        subtitle = "_" + subtitle

    additions = ent_additions.get()
    
    if not additions == "":
        additions = "_" + additions
    
    new_file_name = author + year + title + subtitle + additions + ".pdf"

    new_file_name=new_file_name.replace("-\n","")
    new_file_name=new_file_name.replace("\n"," ")
    new_file_name=new_file_name.replace(":"," ")
    new_file_name=new_file_name.replace("  "," ")
    new_file_name=new_file_name.replace(" ","-")
    new_file_name=new_file_name.replace(",","")
    new_file_name=new_file_name.replace("\"","")
    new_file_name=new_file_name.casefold()
    new_file_name=unidecode.unidecode(new_file_name)
    
    ent_newfilename.insert(0, new_file_name)
    

def submit(file):
    
    new_file_name = ent_newfilename.get()
    
    if os.path.isdir(path+"/renamed") == False:
        os.mkdir(path+"/renamed")
    
    os.rename(file, path+"/renamed/"+new_file_name)
    

window = tk.Tk()
window.title("Pubrename")

default_font = tk.font.nametofont("TkDefaultFont")
default_font.configure(family="Linux Libertine", size=13)

#window.rowconfigure([0,1,2,3,4,5,6,7,8,9], minsize=50, weight=1)
#window.columnconfigure([0,1], minsize=50, weight=1)

lbl_oldfilename = tk.Label(master=window, text="Alter Dateiname: ")
lbl_oldfilename.pack()

ent_oldfilename = tk.Entry(master=window, width=120)#, state='disable')
ent_oldfilename.pack()

lbl_author = tk.Label(master=window, text="Autor/Hrsg:")
lbl_author.pack()
#lbl_author.grid(row=0,column=0)

ent_author = tk.Entry(master=window, width=120)
ent_author.pack()
#ent_author.grid(row=0,column=1)

lbl_year = tk.Label(master=window, text="Jahr:")
lbl_year.pack()
#lbl_year.grid(row=1,column=0)

ent_year = tk.Entry(master=window, width=120)
ent_year.pack()
#ent_year.grid(row=1,column=1)

lbl_title = tk.Label(master=window, text="Titel:")
lbl_title.pack()
#lbl_title.grid(row=2,column=0)

ent_title = tk.Entry(master=window, width=120)
ent_title.pack()
#ent_title.grid(row=2,column=1)

lbl_subtitle = tk.Label(master=window, text="Untertitel (optional):")
lbl_subtitle.pack()
#lbl_subtitle.grid(row=3,column=0)

ent_subtitle = tk.Entry(master=window, width=120)
ent_subtitle.pack()
#ent_subtitle.grid(row=3,column=1)

lbl_additions = tk.Label(master=window, text="Zusätze (optional):")
lbl_additions.pack()
#lbl_additions.grid(row=4,column=0)

ent_additions = tk.Entry(master=window, width=120)
ent_additions.pack()
#ent_additions.grid(row=4,column=1)

btn_preview = tk.Button(master=window, text="Vorschau", command=preview)
btn_preview.pack()
#btn_submit.grid(row=5,column=1)

lbl_newfilename = tk.Label(master=window, text="Neuer Dateiname:")
lbl_newfilename.pack()

ent_newfilename = tk.Entry(master=window, width=120)#, state='disable')
ent_newfilename.pack()

btn_submit = tk.Button(master=window, text="Übernehmen", command=lambda: submit(file))
btn_submit.pack()
#btn_submit.grid(row=5,column=1)

btn_randomfile = tk.Button(master=window, text="Öffne zufällige Datei", command=open_random_file)
btn_randomfile.pack()
#btn_submit.grid(row=5,column=1)

ent_file = tk.Entry(master=window, width=120)
ent_file.pack()

btn_chosedirectory = tk.Button(master=window, text="Bestimme Pfad für zufällige Datei", command=set_path)
btn_chosedirectory.pack()
#btn_submit.grid(row=5,column=1)

ent_directory = tk.Entry(master=window, width=120)
ent_directory.pack()

btn_openfile = tk.Button(master=window, text="Öffne bestimmte Datei", command=open_file)
btn_openfile.pack()
#btn_submit.grid(row=5,column=1)

window.mainloop()